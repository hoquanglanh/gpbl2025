const express = require('express');
const app = express();
const port = 3000;

let currentData = { temperature: 0, humidity: 0, distance: 0, light: 0 };
let fanState = false;
let lightState = false;
let fireDetected = false; // Th√™m bi·∫øn l∆∞u tr·∫°ng th√°i ph√°t hi·ªán l·ª≠a

app.use(express.json());
app.use(express.static('public'));

app.post('/api/temperature', (req, res) => {
    const { temperature, humidity, distance, light, fireDetected: newFireState } = req.body;

    if (temperature !== undefined && humidity !== undefined) {
        currentData = { temperature, humidity, distance, light };
        fanState = temperature > 30 && distance < 50;
        lightState = light < 500;
        fireDetected = newFireState; // C·∫≠p nh·∫≠t tr·∫°ng th√°i ph√°t hi·ªán l·ª≠a

        console.log(`üî• Nhi·ªát ƒë·ªô: ${temperature}¬∞C, ƒê·ªô ·∫©m: ${humidity}%, Kho·∫£ng c√°ch: ${distance}cm, √Ånh s√°ng: ${light}`);
        console.log(`Qu·∫°t: ${fanState ? 'B·∫¨T' : 'T·∫ÆT'}, ƒê√®n: ${lightState ? 'B·∫¨T' : 'T·∫ÆT'}, L·ª≠a: ${fireDetected ? 'PH√ÅT HI·ªÜN' : 'KH√îNG'}`);

        res.json({ message: 'D·ªØ li·ªáu nh·∫≠n th√†nh c√¥ng!', fanState, lightState, fireDetected });
    } else {
        res.status(400).json({ message: 'D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!' });
    }
});

// API l·∫•y d·ªØ li·ªáu hi·ªán t·∫°i
app.get('/api/current-data', (req, res) => {
    res.json({ 
        ...currentData, 
        fanState, 
        lightState,
        fireDetected 
    });
});

// API ƒëi·ªÅu khi·ªÉn ƒë√®n
app.post('/api/control-light', (req, res) => {
    const { state } = req.body;
    lightState = state;
    res.json({ state: lightState });
});

app.listen(port, '0.0.0.0', () => {
    console.log(`üî• Server ƒëang ch·∫°y tr√™n c·ªïng ${port}`);
});

// API ƒëi·ªÅu khi·ªÉn qu·∫°t
app.post('/api/control-fan', (req, res) => {
    const { state } = req.body;
    fanState = state; // C·∫≠p nh·∫≠t tr·∫°ng th√°i qu·∫°t
    res.json({ state: fanState });
});
